"""
File contains functions that can be used to train a FLAML (AutoML) model.

Author: Dominik Macko
"""

from typing import Dict, Any, Union, Callable, Tuple, Optional

import numpy as np
import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from flaml import AutoML

from .generic import train_model, train_randomizedsearchcv_model, train_gridsearchcv_model, train_model_flaml
from .utils import f1_weighted_loss_flaml, cohen_kappa_loss_flaml

def train_automl_flaml(train_X: Union[np.array, pd.DataFrame],
                       train_y: Union[np.array, pd.Series], 
                       validation_X: Union[np.array, pd.DataFrame], 
                       validation_y: Union[np.array, pd.Series],
                       metric_name: str="f1_weighted",
                       seconds_time_budget: int=20 * 60,
                       n_jobs=8,
                       log_file_name: str="automl.log"
                      ) -> AutoML:
    """Trains AutoML using FLAML library.
    
    train_X - training set features
    train_y - training set targets
    validation_X - validation set features
    validation_y - validation set targets
    metric_name - which metric to use
    seconds_time_budget - maximum time budget in seconds
    n_jobs - threads to use
    log_file_name - name of file to log
    
    returns AutoML model
    """

    if metric_name == "f1_weighted":
        metric = f1_weighted_loss_flaml
    elif metric_name == "cohen_kappa":
        metric = cohen_kappa_loss_flaml
    else:
        metric = metric_name

    settings = {
        "time_budget": seconds_time_budget,
        "metric": metric,
        "n_jobs": n_jobs,
        "eval_method": "holdout",
        "task": "classification",
        "log_file_name": log_file_name,
    }
    return train_model_flaml(
        train_X,
        train_y,
        validation_X,
        validation_y,
        settings
    )

